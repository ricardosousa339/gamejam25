name: Build Crocolixo Release

on:
  push:
    tags:
      - 'v*'  # Dispara quando fizer push de uma tag como v1.0.0
  workflow_dispatch:  # Permite execução manual

# Permissões necessárias para criar releases
permissions:
  contents: write
  packages: write

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build with PyInstaller
      run: |
        pyinstaller --clean Crocolixo.spec
    
    - name: List build contents
      run: |
        dir dist\Crocolixo
    
    - name: Create ZIP archive
      run: |
        Compress-Archive -Path dist\Crocolixo\* -DestinationPath Crocolixo-Windows-${{ github.ref_name }}.zip
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: Crocolixo-Windows
        path: Crocolixo-Windows-${{ github.ref_name }}.zip

  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build with PyInstaller
      run: |
        pyinstaller --clean Crocolixo.spec
    
    - name: Create TAR archive
      run: |
        cd dist
        tar -czf Crocolixo-Linux-${{ github.ref_name }}.tar.gz Crocolixo/
        mv Crocolixo-Linux-${{ github.ref_name }}.tar.gz ..
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: Crocolixo-Linux
        path: Crocolixo-Linux-${{ github.ref_name }}.tar.gz

  create-release:
    name: Create GitHub Release
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: Crocolixo-Windows
    
    - name: Download Linux artifact
      uses: actions/download-artifact@v4
      with:
        name: Crocolixo-Linux
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          Crocolixo-Windows-${{ github.ref_name }}.zip
          Crocolixo-Linux-${{ github.ref_name }}.tar.gz
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
